version: "3"

services:
  challenge:
    container_name: backend
    build: .
    environment:
      PORT: 3001
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: postgres
      JWT_SECRET: 00
      JWT_EXPIRES_IN: 7d
      REDIS_PASSWORD: Redis2019!
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "3000:3001"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend-network

  db:
    image: postgres:15.3-alpine
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 20s
      retries: 10

  redis:
    image: redis
    command: redis-server --requirepass Redis2019!
    ports:
      - "6379:6379"
    volumes:
      - ./rd-data/redis/data:/data
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge
    
volumes:
  rd-data:
  postgres-data:
